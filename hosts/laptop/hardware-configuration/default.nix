# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
  (modulesPath + "/installer/scan/not-detected.nix") 
  ./../../../configuration.nix
  ./../battery-configuration.nix
  ./../user-config.nix
  ./bluetooth.nix
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "vmd" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernelPackages = pkgs.linuxPackages_latest; # use latest kernel version

  networking.hostName = "nixos"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Dual Booting using Grub 
   boot.loader = { 
     efi = { 
       efiSysMountPoint = "/boot/efi"; # if using grub
     };

     grub = { 
      enable = true; 
      devices = [ "nodev" ];
      efiInstallAsRemovable = true;
      efiSupport = true;  
      useOSProber = true;  
      configurationLimit = 7;
     };
     timeout = 7;  
   };

    fileSystems."/" =
    { device = "/dev/disk/by-uuid/e0a2ebd4-531b-473d-ab3c-4b1486ea5df7";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/C555-4F5F";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/bc70bb0b-50e3-43a1-9792-217825319cdd"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;
	
  hardware.opengl.extraPackages = with pkgs; [ intel-compute-runtime ];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "balanced";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
